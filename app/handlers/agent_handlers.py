"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –∞–≥–µ–Ω—Ç–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –≤ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ.
"""

import logging

from aiogram import Bot, F, Router
from aiogram.filters import Command
from aiogram.types import Message
from sqlmodel import Session, select

from app.core.config import settings
from app.models.models import SupportSession
from app.services import session_service

router = Router()
# –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è: —Ç–æ–ª—å–∫–æ –∏–∑ –Ω–∞—à–µ–π —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã –∏ —Ç–æ–ª—å–∫–æ –∏–∑ —Ç–µ–º (–Ω–µ –∏–∑ General)
router.message.filter(
    F.chat.id == settings.SUPERGROUP_ID, F.message_thread_id.is_not(None)
)


@router.message(Command("close_chat"))
async def handle_close_chat_command(message: Message, bot: Bot, session: Session):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /close_chat –æ—Ç –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏.
    –ü–æ–ª—É—á–∞–µ—Ç —Å–µ—Å—Å–∏—é –ë–î —á–µ—Ä–µ–∑ middleware.
    """
    agent_id = message.from_user.id
    topic_id = message.message_thread_id

    statement = select(SupportSession).where(
        SupportSession.topic_id == topic_id, SupportSession.status == "active"
    )
    active_session = session.exec(statement).first()

    if not active_session:
        await message.reply("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –≤ —ç—Ç–æ–π —Ç–µ–º–µ.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–º–∞–Ω–¥—É –¥–∞–µ—Ç –∏–º–µ–Ω–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç
    if active_session.agent_telegram_id != agent_id:
        await message.reply(
            "‚õîÔ∏è –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–∫—Ä—ã—Ç—å —ç—Ç—É —Å–µ—Å—Å–∏—é, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –Ω–∞ –¥—Ä—É–≥–æ–≥–æ –∞–≥–µ–Ω—Ç–∞."
        )
        return

    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å
    success = await session_service.close_session(
        session=session, bot=bot, active_session=active_session
    )

    if success:
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await bot.send_message(
            chat_id=active_session.user_telegram_id,
            text="‚úÖ –í–∞—à–∞ —Å–µ—Å—Å–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±—ã–ª–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!",
        )
        # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–µ–º–µ —É–¥–∞–ª–∏—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å —Å–∞–º–æ–π —Ç–µ–º–æ–π.
    else:
        await message.reply(
            "üî¥ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å–µ—Å—Å–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        )


@router.message()
async def handle_agent_message(message: Message, bot: Bot, session: Session):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–≥–µ–Ω—Ç–∞ –≤ —Ç–µ–º–µ –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    –ü–æ–ª—É—á–∞–µ—Ç —Å–µ—Å—Å–∏—é –ë–î —á–µ—Ä–µ–∑ middleware.
    """
    agent_id = message.from_user.id
    topic_id = message.message_thread_id

    # 1. –ù–∞—Ö–æ–¥–∏–º —Å–µ—Å—Å–∏—é –ø–æ ID —Ç–µ–º—ã
    statement = select(SupportSession).where(
        SupportSession.topic_id == topic_id, SupportSession.status == "active"
    )
    active_session = session.exec(statement).first()

    if not active_session:
        logging.warning(
            f"Received message in topic {topic_id}, but no active session found."
        )
        return

    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∏—à–µ—Ç –∏–º–µ–Ω–Ω–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –Ω–∞ —Å–µ—Å—Å–∏—é –∞–≥–µ–Ω—Ç
    if active_session.agent_telegram_id != agent_id:
        logging.warning(
            f"Agent {agent_id} tried to write to session {active_session.id} "
            f"of agent {active_session.agent_telegram_id}. Denied."
        )
        return

    # 3. –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –∫–æ–ø–∏—é —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    logging.info(
        f"Copying message from agent {agent_id} to user {active_session.user_telegram_id}"
    )
    try:
        await bot.copy_message(
            chat_id=active_session.user_telegram_id,
            from_chat_id=message.chat.id,
            message_id=message.message_id,
        )
    except Exception as e:
        logging.error(
            f"Failed to copy message to user {active_session.user_telegram_id}: {e}"
        )
        await message.reply(
            "üî¥ **–û—à–∏–±–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∏!**\n"
            "–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. "
            "–í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –°–µ—Å—Å–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç–æ–π."
        )
